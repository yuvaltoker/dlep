# What image do we start from
FROM ubuntu:20.04

# preventing dialog error
ENV DEBIAN_FRONTEND noninteractive

##################################
#        DLEP dependencies       #
##################################
RUN apt-get update
RUN apt-get install -y build-essential

RUN apt-get install -y nano
RUN apt-get install -y libboost-thread-dev
RUN apt-get install -y libboost-system-dev
RUN apt-get install -y libboost-test-dev
RUN apt-get install -y libboost-all-dev g++
RUN apt-get install -y libxml2
RUN apt-get install -y libxml2-dev
RUN apt-get install -y libxml2-utils
RUN apt-get install -y libreadline6-dev
RUN apt-get install -y libprotobuf-dev
RUN apt-get install -y protobuf-compiler
RUN apt-get install -y doxygen
RUN apt-get install -y graphviz
RUN apt-get install -y cmake

##################################
#       python dependencies      #
##################################
# install python dependencies
RUN apt update && apt upgrade -y
RUN apt-get install -y python3.8 python3-pip curl
RUN apt-get install -y software-properties-common

####################################################
#      catchNgo rabbitmq service dependencies      #
####################################################
# install rmq dependencies
RUN apt update && apt upgrade -y
RUN add-apt-repository ppa:deadsnakes/ppa
RUN pip3 install pika
RUN pip3 install mpire

####################################
#       mongodb  dependencies      #
####################################
# mongodb with python lib
RUN pip3 install pymongo pandas

##################################################
#      waiting for other containers service      #
##################################################
## Add the wait script to the image
ADD https://github.com/ufoscout/docker-compose-wait/releases/download/2.9.0/wait /wait
RUN chmod +x /wait

##########################
#      adding files      #
##########################
# rabbitmq and mongodb service
COPY ./rmq-mdb-service.py /
# adjusted dlep files, then install
RUN mkdir /adjusted-dlep
RUN mkdir /adjusted-dlep/build/
ADD ./adjusted-LL-DLEP/adjusted-DLEP/ /adjusted-dlep/
RUN cd /adjusted-dlep/build/ && cmake .. && make && make install
# exec file to choose router/modem and its consequences
ADD ./choose-implement.sh .
RUN chmod 777 choose-implement.sh

##################
#      cmd       #
##################
# launch the wait tool and then your application
CMD /wait && /choose-implement.sh

