# What image do we start from
FROM ubuntu:latest

# preventing dialog error
ENV DEBIAN_FRONTEND noninteractive

##################################
#        DLEP dependencies       #
##################################
RUN apt-get update
RUN apt-get install -y build-essential
RUN apt-get install -y python3-pip

RUN apt-get install -y nano
RUN apt-get install -y libboost-thread-dev
RUN apt-get install -y libboost-system-dev
RUN apt-get install -y libboost-test-dev
RUN apt-get install -y libxml2
RUN apt-get install -y libxml2-dev
RUN apt-get install -y libxml2-utils
RUN apt-get install -y libreadline6-dev
RUN apt-get install -y libprotobuf-dev
RUN apt-get install -y protobuf-compiler
RUN apt-get install -y doxygen
RUN apt-get install -y graphviz
RUN apt-get install -y cmake

##################################

####################################
#       mongodb  dependencies      #
####################################
RUN apt-get update
# for the g++ compiler
RUN apt-get install -y libboost-all-dev
RUN apt-get install -y libssl-dev
RUN apt-get install -y wget

# for remove and install cmake correctly
RUN apt remove --purge --auto-remove -y cmake
RUN apt update && apt install -y software-properties-common lsb-release && apt clean all
RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
RUN apt-add-repository "deb https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main"
RUN apt update && apt install -y kitware-archive-keyring && rm /etc/apt/trusted.gpg.d/kitware.gpg
RUN apt update && apt install -y cmake

# for install-mongocxx-driver.sh script
RUN apt-get install -y git
#for the install-server-dependencies
RUN apt install -y curl

RUN mkdir /mongocxx-example

ADD ./install-mongocxx-driver.sh /
RUN chmod +x install-mongocxx-driver.sh
RUN ./install-mongocxx-driver.sh

ADD ./install-server-dependencies.sh /
RUN chmod +x install-server-dependencies.sh
RUN ./install-server-dependencies.sh

# the next line is currently a mistery for me- the code doesn't work without it:
# error while loading shared libraries: libmongocxx.so._noabi: cannot open shared object file: No such file or directory
# but, when vim is getting installed the problem is fixed
RUN apt-get install -y vim

####################################

####################################################
#      catchNgo rabbitmq service dependencies      #
####################################################
# install python dependencies
RUN apt-get install -y software-properties-common
RUN add-apt-repository ppa:deadsnakes/ppa
RUN apt-get update
RUN apt-get install -y python3.8

RUN apt install -y python3-pip curl
RUN pip3 install pika
RUN pip3 install mpire

COPY ./rabbitmq-service.py /

####################################################

#ADD ./sourceHash.txt .
RUN mkdir /adjusted-dlep/
RUN mkdir /adjusted-dlep/build/
ADD ./adjusted-LL-DLEP/adjusted-DLEP/ /adjusted-dlep/

RUN cd /adjusted-dlep/build/ && cmake .. && make && make install


##################################################
#      waiting for other containers service      #
##################################################
## Add the wait script to the image
ADD https://github.com/ufoscout/docker-compose-wait/releases/download/2.9.0/wait /wait
RUN chmod +x /wait

## Add your application to the docker image
ADD ./choose-implement.sh .
RUN chmod 777 choose-implement.sh

##################################################

## Launch the wait tool and then your application
CMD /wait && /choose-implement.sh

# ENTRYPOINT ./choose-implement.sh
